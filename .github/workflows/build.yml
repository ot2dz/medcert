name: Build Windows Application

# تشغيل البناء عند push أو pull request على branch main
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  # مهمة البناء للنوافذ
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build React application
        run: npm run build:ui
        
      - name: Build Electron application
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Windows Installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: |
            dist/*.exe
            dist/*.msi
          retention-days: 30
          
      - name: Upload Portable App
        uses: actions/upload-artifact@v4
        with:
          name: windows-portable
          path: |
            dist/*-portable.exe
          retention-days: 30
          if-no-files-found: ignore
          
      # رفع الإصدارات على GitHub Releases عند وجود tag
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.exe
            dist/*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  # مهمة البناء لنظامي macOS و Linux (اختيارية)
  build-cross-platform:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxss1 libgtk-3-dev libxrandr2 libasound2-dev
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build React application
        run: npm run build:ui
        
      - name: Build Electron application
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: |
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
          retention-days: 30
          if-no-files-found: ignore